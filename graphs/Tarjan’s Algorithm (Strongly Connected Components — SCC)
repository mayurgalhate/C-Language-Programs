#include <stdio.h>
#include <stdlib.h>

#define MAXN 1000

int n, timer = 0, sccCount = 0;
int disc[MAXN], low[MAXN], inStack[MAXN];
int stack[MAXN], top = -1;
int graph[MAXN][MAXN];

void dfs(int u) {
    disc[u] = low[u] = ++timer;
    stack[++top] = u;
    inStack[u] = 1;

    for (int v = 0; v < n; v++) {
        if (graph[u][v]) {
            if (disc[v] == -1) {
                dfs(v);
                low[u] = (low[u] < low[v]) ? low[u] : low[v];
            } else if (inStack[v]) {
                low[u] = (low[u] < disc[v]) ? low[u] : disc[v];
            }
        }
    }

    if (low[u] == disc[u]) {
        printf("SCC %d: ", ++sccCount);
        while (1) {
            int node = stack[top--];
            inStack[node] = 0;
            printf("%d ", node);
            if (node == u) break;
        }
        printf("\n");
    }
}

int main() {
    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter adjacency matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &graph[i][j]);

    for (int i = 0; i < n; i++) {
        disc[i] = -1;
        low[i] = -1;
        inStack[i] = 0;
    }

    for (int i = 0; i < n; i++)
        if (disc[i] == -1)
            dfs(i);

    return 0;
}
